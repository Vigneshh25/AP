 CREATE TABLE Users (
     user_id INT AUTO_INCREMENT PRIMARY KEY,
     username VARCHAR(255) NOT NULL,
     email VARCHAR(255) NOT NULL UNIQUE,
     password_hash VARCHAR(255) NOT NULL,
     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
 );

CREATE TABLE Events (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    start_time DATETIME NOT NULL,
    end_time DATETIME NOT NULL
);
CREATE TABLE Event_Attendees (
    event_id INT,
    user_id INT,
    PRIMARY KEY (event_id, user_id),
    FOREIGN KEY (event_id) REFERENCES Events(id),
    FOREIGN KEY (user_id) REFERENCES Users(id)
);
CREATE TABLE Recurrence (
    event_id INT,
    recurrence_type ENUM('DAILY', 'WEEKLY') NOT NULL,
    occurrences INT NOT NULL,
    PRIMARY KEY (event_id),
    FOREIGN KEY (event_id) REFERENCES Events(id)
);
CREATE TABLE Reminders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    event_id INT,
    remind_at DATETIME NOT NULL,
    FOREIGN KEY (event_id) REFERENCES Events(id)
);
CREATE TABLE Calendars (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES Users(id)
);
CREATE TABLE Calendar_Events (
    calendar_id INT,
    event_id INT,
    PRIMARY KEY (calendar_id, event_id),
    FOREIGN KEY (calendar_id) REFERENCES Calendars(id),
    FOREIGN KEY (event_id) REFERENCES Events(id)
);
CREATE TABLE Calendar_Shares (
    calendar_id INT,
    user_id INT,
    permission ENUM('READ_ONLY', 'EDIT', 'FULL_ACCESS') NOT NULL,
    PRIMARY KEY (calendar_id, user_id),
    FOREIGN KEY (calendar_id) REFERENCES Calendars(id),
    FOREIGN KEY (user_id) REFERENCES Users(id)
);
CREATE TABLE Notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    type ENUM('EMAIL', 'SMS') NOT NULL,
    recipient VARCHAR(255) NOT NULL,
    message TEXT NOT NULL
);
